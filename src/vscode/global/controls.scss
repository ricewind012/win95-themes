@use "shared/controls";
@use "shared/generated";
@use "shared/scrollbar";
@use "shared/window";
@use "shared++/extends";

%-toolbar-maybe {
	.action-label {
		@include controls.button(
			$disabled-sel: "[aria-disabled]",
			$active-sel: "[aria-expanded='true']"
		);
		@include window.titlebar-button;
	}

	.action-item {
		// Titlebar
		&.clicked > .action-label {
			@include controls.button-active;
		}
	}
}

.badge {
	margin-left: var(--text-spacing);

	position: unset;
	width: unset;
	height: unset;
	z-index: initial;
}

.badge-content {
	background-color: transparent;
	color: inherit;
	font: var(--text-ui);
	@include extends.parentheses;
	padding: 0;

	position: unset;
	height: unset;
}

.decorationsOverviewRuler {
	top: var(--scrollbar-size);
	width: var(--scrollbar-size);
	height: calc(100% - var(--scrollbar-size) * 2);
	z-index: 12;

	pointer-events: none;
}

.select-container {
	overflow: visible;

	&::after {
		display: none;
	}
}

// Buttons
.monaco-button {
	@include controls.button;

	// !important
	.monaco-button-dropdown.disabled > .monaco-button-dropdown-separator,
	.monaco-button-dropdown.disabled > &.disabled,
	.monaco-button-dropdown.disabled > &.disabled:focus {
		opacity: 1;
	}
}

.monaco-button-description {
	font: var(--text-ui);
}

.monaco-text-button {
	height: unset;
}

.monaco-text-button-with-short-label,
.monaco-description-buttons > .monaco-button {
	overflow: visible;
	width: 148px;
}

.monaco-action-bar {
	.peekview-widget &,
	.dialog-toolbar-row &,
	.notifications-center &,
	.notification-toast &,
	.settings-clear-widget &,
	.terminal-tabs-entry & {
		@extend %-toolbar-maybe;
	}

	.action-item {
		cursor: unset;

		&:not([role="tab"]) {
			margin: 0;
		}
	}
}

.monaco-dropdown {
	& > .dropdown-label {
		cursor: unset;
	}
}

.monaco-dropdown-button {
	@include controls.button;
	@include window.titlebar-button;

	width: 16px;
	height: 23px;
}

// Text input
.monaco-inputbox {
	background-color: transparent;
	color: var(--color-window-text);
	font: var(--text-ui);
	border: none;
	@include controls.text-field;

	overflow: visible;
	height: unset;

	.action-label {
		padding: 0;

		display: flex;
		justify-content: center;
	}

	& > .ibwrapper > .input {
		// Fix scrollable content cutting off
		--spacing: calc(var(--border-size) + var(--input-spacing));
		padding: var(--spacing);
		margin: calc(var(--spacing) * -1);
	}
}

.monaco-findInput {
	gap: var(--toolbar-spacing);

	display: flex;
	align-items: center;

	& > .monaco-scrollable-element {
		overflow: visible;
		flex: 1;
	}

	input,
	textarea {
		width: 100%;
	}

	.controls {
		position: unset;
	}
}

// Checkboxes
.monaco-checkbox {
	@include controls.checkbox($checked-sel: "&.checked");

	border: none;
	margin: 0;

	.monaco-custom-toggle:not(&) {
		&.codicon,
		.codicon {
			@include controls.button($active-sel: ".checked");
			@include window.titlebar-button;

			border: none;

			width: unset;
		}
	}
}

// Badges
.monaco-count-badge {
	background-color: transparent;
	color: inherit;
	font: var(--text-ui);
	@include extends.parentheses;
	padding: 0;

	min-width: unset;
	min-height: unset;
}

// Separator
.monaco-sash {
	--vscode-sash-size: 7px;
	--vscode-sash-hover-size: 7px;
	--vscode-sash-hoverBorder: transparent;

	&.vertical {
		margin-left: 2px;

		#workbench\.parts\.editor & {
			--vscode-sash-size: 19px;
			margin-left: -11px;
		}
	}

	&.horizontal {
		margin-top: -12px;
	}
}

.monaco-select-box {
	@include controls.combobox;
}

// Scrollbar
.monaco-scrollable-element > .scrollbar {
	@include scrollbar.container;

	top: 0px;
	height: 100%;

	&.horizontal {
		width: 100%;
		height: var(--scrollbar-size);
	}

	& > .slider {
		@include scrollbar.thumb;

		width: var(--scrollbar-size);
	}

	& > .scra {
		&.codicon {
			@include scrollbar.button;

			font-size: 0;

			left: 0;
		}

		&.codicon-scrollbar-button-up {
			@include generated.scrollbar-button-vertical-decrement;

			top: 0;
		}

		&.codicon-scrollbar-button-down {
			@include generated.scrollbar-button-vertical-increment;

			bottom: 0;
		}

		&.codicon-scrollbar-button-left {
			@include generated.scrollbar-button-horizontal-decrement;

			left: 0;
		}

		&.codicon-scrollbar-button-right {
			@include generated.scrollbar-button-horizontal-increment;

			left: unset;
			right: 0;
		}
	}
}

.monaco-toolbar {
	@extend %-toolbar-maybe;
}

// Item list
.monaco-list {
	@include window.content-container;

	width: 100%;
	height: calc(100% - 10px);

	&:focus::before {
		display: none;
	}
}

.monaco-list-row {
	overflow: visible;
	font: var(--text-ui);

	&.selected {
		--vscode-keybindingLabel-border: var(--color-active-caption-text);
		--vscode-keybindingLabel-bottomBorder: var(--vscode-keybindingLabel-border);
		--vscode-widget-shadow: color-mix(
			in srgb,
			var(--color-active-caption-text) 50%,
			transparent
		);
	}

	& > .option-detail {
		opacity: 1;
	}
}

.action-item.disabled .action-label {
	.monaco-action-bar & {
		//@include window.titlebar-button-disabled;
	}

	&,
	&::before {
		opacity: 1;
	}
}

.scm-editor,
.suggest-input {
	&-container {
		@include controls.text-field;

		border: none;

		flex-grow: 1;

		.monaco-editor {
			&[style*="height: 20px"],
			&[style*="height: 21px"],
			&[style*="height: 22px"],
			&[style*="height: 23px"],
			&[style*="height: 24px"] {
				height: calc(var(--text-ui-size) * var(--text-line) + 8px);
			}
		}

		.view-lines {
			font: var(--text-ui);
		}
	}

	&-placeholder {
		font: var(--text-ui);
		padding: 0;
		margin: 0;

		width: unset;
	}
}

// !important
.monaco-workbench
	.part.editor
	> .content
	.gettingStartedContainer
	.gettingStartedSlide
	.getting-started-checkbox,
.settings-editor
	> .settings-body
	.settings-tree-container
	.setting-item-bool
	.setting-value-checkbox {
	@include controls.checkbox($checked-sel: "&.checked");

	min-width: unset;
}
